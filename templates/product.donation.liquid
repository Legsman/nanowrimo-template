{% comment %}
  The contents of the product.liquid template can be found in /sections/product-template.liquid
{% endcomment %}

{% section 'product-donation-template' %}

<script>
      (function($) {

        // USERNAMES AUTOCOMPLETE METHODS

        // Build an array of the fetched usernames
        function usernamesToArray(usernames) {
         array = $.map(usernames, function(v,i){
            return { label: v.name, value: v.name, id: v.uid };
          });
         return array
        };

        // Autocomplete method which fetch username from NanoWrimo api through nano-app
        $("#username").autocomplete({
           source: function (request, response) {
              $.ajax({
                 url: "/api/v1/users.json",
                 dataType: "json",
                 data: { 'username': request.term },
                 success: function (data) {
                    response(usernamesToArray(data.usernames));
                 }
              });
           },
          select: function (event, ui) {
             $('#username').val = ui.item.value;
             $('#uid').val = ui.item.id;
          },
          minLength: 2,   
          delay: 300,   
        });


        // PRICE FETCH METHODS 

         // Ajax request to nano-app to fetch price and create variants with new prices accordingly
         $(document).on('keyup', '[data-variant-price-id]', function(e) {
           delay(function(){
            $.ajax({
              url: 'https://89c944b6.ngrok.io/get-variant.json',
              data: { 'amount': e.target.value, 'shop': 'nanowrimo-store.myshopify.com' },
              success: function(data) {
                $('#price').data('variant-price-id', data.variant_id)
              }
            });
           }, 300)
         });

        // Allow delay when typing price
        var delay = (function(){
          var timer = 0;
          return function(callback, ms){
          clearTimeout (timer);
          timer = setTimeout(callback, ms);
         };
        })();

        // SUBMIT BUTTON OVERRIDE 

        var recurringCharge = (function(){
          if ($('#recurring-charge').is(":checked")){
            $('#recurring-charge').val()
          };
        })

        var donnorGoodies = (function(){
          if ($('#donnor-goodies').is(":checked")){
            $('#donnor-goodies').val()
          };
        })

         $( "form" ).submit(function(e) {
            e.preventDefault();
            $.post('/cart/add.js', {
                quantity: 1,
                id: $('#price').data('variant-price-id'),
                price: $('#price').val(),
                properties: {
                    'donor-goodies': donnorGoodies(),
                    'event-type': $('#event-type').val(),
                    'username': $('#username').val(),
                    'url': $('#url').val(),
                    'recurring-charge': recurringCharge()
                  },
                function(data) {
                  window.location.reload();
                }
            });
         });

      }(jQuery));

  // Override default values of shop.strings for each template.
  // Alternate product templates can change values of
  // add to cart button, sold out, and unavailable states here.
  theme.productStrings = {
    addToCart: {{ 'products.product.add_to_cart' | t | json }},
    soldOut: {{ 'products.product.sold_out' | t | json }},
    unavailable: {{ 'products.product.unavailable' | t | json }}
  }
</script>
